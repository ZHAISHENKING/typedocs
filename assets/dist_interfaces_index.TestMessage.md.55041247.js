import{_ as e,c as t,o as d,a}from"./app.8ea3f0da.js";const u=JSON.parse('{"title":"Interface: TestMessage","description":"","frontmatter":{},"headers":[{"level":2,"title":"Table of contents","slug":"table-of-contents","link":"#table-of-contents","children":[{"level":3,"title":"Properties","slug":"properties","link":"#properties","children":[]}]},{"level":2,"title":"Properties","slug":"properties-1","link":"#properties-1","children":[{"level":3,"title":"end","slug":"end","link":"#end","children":[]},{"level":3,"title":"testEnd","slug":"testend","link":"#testend","children":[]}]}],"relativePath":"dist/interfaces/index.TestMessage.md"}'),o={name:"dist/interfaces/index.TestMessage.md"},r=a('<h1 id="interface-testmessage" tabindex="-1">Interface: TestMessage <a class="header-anchor" href="#interface-testmessage" aria-hidden="true">#</a></h1><p><a href="./../modules/">index</a>.TestMessage</p><h2 id="table-of-contents" tabindex="-1">Table of contents <a class="header-anchor" href="#table-of-contents" aria-hidden="true">#</a></h2><h3 id="properties" tabindex="-1">Properties <a class="header-anchor" href="#properties" aria-hidden="true">#</a></h3><ul><li><a href="./index.TestMessage.html#end">end</a></li><li><a href="./index.TestMessage.html#testend">testEnd</a></li></ul><h2 id="properties-1" tabindex="-1">Properties <a class="header-anchor" href="#properties-1" aria-hidden="true">#</a></h2><h3 id="end" tabindex="-1">end <a class="header-anchor" href="#end" aria-hidden="true">#</a></h3><p><code>Optional</code> <strong>end</strong>: <code>Object</code></p><h4 id="type-declaration" tabindex="-1">Type declaration <a class="header-anchor" href="#type-declaration" aria-hidden="true">#</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>duration</code></td><td style="text-align:left;"><code>number</code></td></tr><tr><td style="text-align:left;"><code>failed</code></td><td style="text-align:left;"><code>number</code></td></tr><tr><td style="text-align:left;"><code>filtered</code></td><td style="text-align:left;"><code>number</code></td></tr><tr><td style="text-align:left;"><code>ignored</code></td><td style="text-align:left;"><code>number</code></td></tr><tr><td style="text-align:left;"><code>measured</code></td><td style="text-align:left;"><code>number</code></td></tr><tr><td style="text-align:left;"><code>passed</code></td><td style="text-align:left;"><code>number</code></td></tr><tr><td style="text-align:left;"><code>results</code></td><td style="text-align:left;">{ <code>duration</code>: <code>number</code> ; <code>error?</code>: <code>Error</code> ; <code>name</code>: <code>string</code> ; <code>status</code>: <code>&quot;failed&quot;</code> | <code>&quot;passed&quot;</code> | <code>&quot;ignored&quot;</code> }[]</td></tr></tbody></table><hr><h3 id="testend" tabindex="-1">testEnd <a class="header-anchor" href="#testend" aria-hidden="true">#</a></h3><p><code>Optional</code> <strong>testEnd</strong>: <code>Object</code></p><h4 id="type-declaration-1" tabindex="-1">Type declaration <a class="header-anchor" href="#type-declaration-1" aria-hidden="true">#</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>duration</code></td><td style="text-align:left;"><code>number</code></td></tr><tr><td style="text-align:left;"><code>error?</code></td><td style="text-align:left;"><code>Error</code></td></tr><tr><td style="text-align:left;"><code>name</code></td><td style="text-align:left;"><code>string</code></td></tr><tr><td style="text-align:left;"><code>status</code></td><td style="text-align:left;"><code>&quot;failed&quot;</code> | <code>&quot;passed&quot;</code> | <code>&quot;ignored&quot;</code></td></tr></tbody></table>',15),l=[r];function n(s,c,i,h,f,g){return d(),t("div",null,l)}const x=e(o,[["render",n]]);export{u as __pageData,x as default};
